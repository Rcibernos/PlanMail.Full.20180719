
#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:	------------------------------------------------------->>>>>>>>>
#wrapper.java.command=java

#  Specify a specific java binary:
set.JAVA_HOME=C:/Program Files (x86)/Java/jdk1.8.0_60/jre
wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.		------------------------------------------------------->>>>>>>>>
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperJarApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1			------------------------------------------------------->>>>>>>>>
wrapper.java.classpath.1=../lib/wrapper.jar
wrapper.java.classpath.2=../lib/envioMails.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so) ------------------------------------------------------->>>>>>>>>
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode. ------------------------------------------------------->>>>>>>>>
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters------------------------------------------------------->>>>>>>>>
wrapper.java.additional.1=

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1 ------------------------------------------------------->>>>>>>>>
wrapper.app.parameter.1=../lib/envioMails.jar



#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)	------------------------------------------------------->>>>>>>>>
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)	------------------------------------------------------->>>>>>>>>
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.			------------------------------------------------------->>>>>>>>>
wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)	------------------------------------------------------->>>>>>>>>
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)	------------------------------------------------------->>>>>>>>>
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before	------------------------------------------------------->>>>>>>>>
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old ------------------------------------------------------->>>>>>>>>
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels) ------------------------------------------------------->>>>>>>>>
wrapper.syslog.loglevel=NONE



#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties	------------------------------------------------------->>>>>>>>>
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.			------------------------------------------------------->>>>>>>>>
wrapper.pidfile.strict=TRUE

# Title to use when running as a console			------------------------------------------------------->>>>>>>>>
wrapper.console.title=Aplicación JAVAMAIL



#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition) ------------------------------------------------------->>>>>>>>>
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Ignore output from dumping the configuration to the console.  This is only needed by the TestWrapper sample application.)
wrapper.filter.trigger.999=wrapper.filter.trigger.*java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.999=TRUE
wrapper.filter.action.999=NONE

#  Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE

# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError

# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1001=TRUE
wrapper.filter.action.1001=RESTART
wrapper.filter.message.1001=The JVM has run out of memory.


#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=envioMails

# Display name of the service
wrapper.displayname=Aplicacion Javamail

# Description of the service
wrapper.description=Aplicacion Javamail- Envio y Recepcion de mails

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

wrapper.java.additional.1=-Dcas.authentication.mode=silent


